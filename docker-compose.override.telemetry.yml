services:
  ts-new-gateway:
    build:
      target: telemetry
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT
      - OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
      - OTEL_RESOURCE_ATTRIBUTES
      - OTEL_LOGS_EXPORTER=otlp
      - OTEL_SERVICE_NAME=tsnewgateway
      - OTEL_INSTRUMENTATION_METHODS_INCLUDE=${GATEWAY_OTEL_INSTRUMENTATION_METHODS_INCLUDE}
  ts-order-service:
    build:
      target: telemetry
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT
      - OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
      - OTEL_RESOURCE_ATTRIBUTES
      - OTEL_LOGS_EXPORTER=otlp
      - OTEL_SERVICE_NAME=tsorderservice
      - OTEL_INSTRUMENTATION_METHODS_INCLUDE=${TS_ORDER_SERVICE_OTEL_INSTRUMENTATION_METHODS_INCLUDE}
  ts-food-service:
    build:
      target: telemetry
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT
      - OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
      - OTEL_RESOURCE_ATTRIBUTES
      - OTEL_LOGS_EXPORTER=otlp
      - OTEL_SERVICE_NAME=tsfoodservice
      - OTEL_INSTRUMENTATION_METHODS_INCLUDE=${TS_FOOD_SERVICE_OTEL_INSTRUMENTATION_METHODS_INCLUDE}
  ts-cancel-service:
    build:
      target: telemetry
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT
      - OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
      - OTEL_RESOURCE_ATTRIBUTES
      - OTEL_LOGS_EXPORTER=otlp
      - OTEL_SERVICE_NAME=tscancelservice
      - OTEL_INSTRUMENTATION_METHODS_INCLUDE=${TS_CANCEL_SERVICE_OTEL_INSTRUMENTATION_METHODS_INCLUDE}
  ts-admin-service:
    build:
      target: telemetry
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT
      - OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
      - OTEL_RESOURCE_ATTRIBUTES
      - OTEL_LOGS_EXPORTER=otlp
      - OTEL_SERVICE_NAME=tsadminservice
      - OTEL_INSTRUMENTATION_METHODS_INCLUDE=${TS_ADMIN_SERVICE_OTEL_INSTRUMENTATION_METHODS_INCLUDE}
  ts-assurance-service:
    build:
      target: telemetry
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT
      - OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
      - OTEL_RESOURCE_ATTRIBUTES
      - OTEL_LOGS_EXPORTER=otlp
      - OTEL_SERVICE_NAME=tsassuranceservice
      - OTEL_INSTRUMENTATION_METHODS_INCLUDE=${TS_ASSURANCE_SERVICE_OTEL_INSTRUMENTATION_METHODS_INCLUDE}
  ts-auth-service:
    build:
      target: telemetry
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT
      - OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
      - OTEL_RESOURCE_ATTRIBUTES
      - OTEL_LOGS_EXPORTER=otlp
      - OTEL_SERVICE_NAME=tsauthservice
      - OTEL_INSTRUMENTATION_METHODS_INCLUDE=${TS_AUTH_SERVICE_OTEL_INSTRUMENTATION_METHODS_INCLUDE}
  ts-config-service:
    build:
      target: telemetry
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT
      - OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
      - OTEL_RESOURCE_ATTRIBUTES
      - OTEL_LOGS_EXPORTER=otlp
      - OTEL_SERVICE_NAME=tsconfigservice
      - OTEL_INSTRUMENTATION_METHODS_INCLUDE=${TS_CONFIG_SERVICE_OTEL_INSTRUMENTATION_METHODS_INCLUDE}
  ts-consign-service:
    build:
      target: telemetry
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT
      - OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
      - OTEL_RESOURCE_ATTRIBUTES
      - OTEL_LOGS_EXPORTER=otlp
      - OTEL_SERVICE_NAME=tsconsignservice
      - OTEL_INSTRUMENTATION_METHODS_INCLUDE=${TS_CONSIGN_SERVICE_OTEL_INSTRUMENTATION_METHODS_INCLUDE}
  ts-contacts-service:
    build:
      target: telemetry
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT
      - OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
      - OTEL_RESOURCE_ATTRIBUTES
      - OTEL_LOGS_EXPORTER=otlp
      - OTEL_SERVICE_NAME=tscontactsservice
      - OTEL_INSTRUMENTATION_METHODS_INCLUDE=${TS_CONTACTS_SERVICE_OTEL_INSTRUMENTATION_METHODS_INCLUDE}
  ts-delivery-service:
    build:
      target: telemetry
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT
      - OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
      - OTEL_RESOURCE_ATTRIBUTES
      - OTEL_LOGS_EXPORTER=otlp
      - OTEL_SERVICE_NAME=tsdeliveryservice
      - OTEL_INSTRUMENTATION_METHODS_INCLUDE=${TS_DELIVERY_SERVICE_OTEL_INSTRUMENTATION_METHODS_INCLUDE}
  ts-notification-service:
    build:
      target: telemetry
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT
      - OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
      - OTEL_RESOURCE_ATTRIBUTES
      - OTEL_LOGS_EXPORTER=otlp
      - OTEL_SERVICE_NAME=tsnotificationservice
      - OTEL_INSTRUMENTATION_METHODS_INCLUDE=${TS_NOTIFICATION_SERVICE_OTEL_INSTRUMENTATION_METHODS_INCLUDE}
  ts-order-related-service:
    build:
      target: telemetry
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT
      - OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
      - OTEL_RESOURCE_ATTRIBUTES
      - OTEL_LOGS_EXPORTER=otlp
      - OTEL_SERVICE_NAME=tsorderrelatedservice
      - OTEL_INSTRUMENTATION_METHODS_INCLUDE=${TS_ORDER_RELATED_SERVICE_OTEL_INSTRUMENTATION_METHODS_INCLUDE}
  ts-preserve-service:
    build:
      target: telemetry
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT
      - OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
      - OTEL_RESOURCE_ATTRIBUTES
      - OTEL_LOGS_EXPORTER=otlp
      - OTEL_SERVICE_NAME=tspreserveservice
      - OTEL_INSTRUMENTATION_METHODS_INCLUDE=${TS_PRESERVE_SERVICE_OTEL_INSTRUMENTATION_METHODS_INCLUDE}
  ts-price-service:
    build:
      target: telemetry
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT
      - OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
      - OTEL_RESOURCE_ATTRIBUTES
      - OTEL_LOGS_EXPORTER=otlp
      - OTEL_SERVICE_NAME=tspriceservice
      - OTEL_INSTRUMENTATION_METHODS_INCLUDE=${TS_PRICE_SERVICE_OTEL_INSTRUMENTATION_METHODS_INCLUDE}
  ts-rebook-service:
    build:
      target: telemetry
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT
      - OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
      - OTEL_RESOURCE_ATTRIBUTES
      - OTEL_LOGS_EXPORTER=otlp
      - OTEL_SERVICE_NAME=tsrebookservice
      - OTEL_INSTRUMENTATION_METHODS_INCLUDE=${TS_REBOOK_SERVICE_OTEL_INSTRUMENTATION_METHODS_INCLUDE}
  ts-route-service:
    build:
      target: telemetry
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT
      - OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
      - OTEL_RESOURCE_ATTRIBUTES
      - OTEL_LOGS_EXPORTER=otlp
      - OTEL_SERVICE_NAME=tsrouteservice
      - OTEL_INSTRUMENTATION_METHODS_INCLUDE=${TS_ROUTE_SERVICE_OTEL_INSTRUMENTATION_METHODS_INCLUDE}
  ts-security-service:
    build:
      target: telemetry
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT
      - OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
      - OTEL_RESOURCE_ATTRIBUTES
      - OTEL_LOGS_EXPORTER=otlp
      - OTEL_SERVICE_NAME=tssecurityservice
      - OTEL_INSTRUMENTATION_METHODS_INCLUDE=${TS_SECURITY_SERVICE_OTEL_INSTRUMENTATION_METHODS_INCLUDE}
  ts-station-service:
    build:
      target: telemetry
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT
      - OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
      - OTEL_RESOURCE_ATTRIBUTES
      - OTEL_LOGS_EXPORTER=otlp
      - OTEL_SERVICE_NAME=tsstationservice
      - OTEL_INSTRUMENTATION_METHODS_INCLUDE=${TS_STATION_SERVICE_OTEL_INSTRUMENTATION_METHODS_INCLUDE}
  ts-travel-service:
    build:
      target: telemetry
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT
      - OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
      - OTEL_RESOURCE_ATTRIBUTES
      - OTEL_LOGS_EXPORTER=otlp
      - OTEL_SERVICE_NAME=tstravelservice
      - OTEL_INSTRUMENTATION_METHODS_INCLUDE=${TS_TRAVEL_SERVICE_OTEL_INSTRUMENTATION_METHODS_INCLUDE}
  ts-user-service:
    build:
      target: telemetry
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT
      - OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
      - OTEL_RESOURCE_ATTRIBUTES
      - OTEL_LOGS_EXPORTER=otlp
      - OTEL_SERVICE_NAME=tsuserservice
      - OTEL_INSTRUMENTATION_METHODS_INCLUDE=${TS_USER_SERVICE_OTEL_INSTRUMENTATION_METHODS_INCLUDE}
  # ********************
  # Telemetry Components
  # ********************
  # Jaeger
  jaeger:
    image: ${JAEGERTRACING_IMAGE}
    container_name: jaeger
    command:
      - "--memory.max-traces=5000"
      - "--query.base-path=/jaeger/ui"
      - "--prometheus.server-url=http://${PROMETHEUS_ADDR}"
      - "--prometheus.query.normalize-calls=true"
      - "--prometheus.query.normalize-duration=true"
    deploy:
      resources:
        limits:
          memory: 400M
    restart: unless-stopped
    ports:
      - "${JAEGER_SERVICE_PORT}:${JAEGER_SERVICE_PORT}"         # Jaeger UI
      - "${OTEL_COLLECTOR_PORT_GRPC}"
    networks:
      - ts-dkr-network
    environment:
      - METRICS_STORAGE_TYPE=prometheus

  # Grafana
  grafana:
    image: ${GRAFANA_IMAGE}
    container_name: grafana
    deploy:
      resources:
        limits:
          memory: 100M
    restart: unless-stopped
    networks:
      - ts-dkr-network
    environment:
      - "GF_INSTALL_PLUGINS=grafana-opensearch-datasource"
    volumes:
      - ./telemetry/grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./telemetry/grafana/provisioning/:/etc/grafana/provisioning/
    ports:
      - "${GRAFANA_SERVICE_PORT}:${GRAFANA_SERVICE_PORT}"

  # OpenTelemetry Collector
  otelcol:
    image: ${COLLECTOR_CONTRIB_IMAGE}
    container_name: otelcol
    deploy:
      resources:
        limits:
          memory: 200M
    restart: unless-stopped
    command: [ "--config=/etc/otelcol-config.yml" ]
    volumes:
      - ./telemetry/otelcollector/otelcol-config.yml:/etc/otelcol-config.yml
    ports:
      - "${OTEL_COLLECTOR_PORT_GRPC}"
      - "${OTEL_COLLECTOR_PORT_HTTP}"
    depends_on:
      - jaeger
    networks:
      - ts-dkr-network
    environment:
      - ENVOY_PORT # TODO: Check

  # Prometheus
  prometheus:
    image: ${PROMETHEUS_IMAGE}
    container_name: prometheus
    command:
      - --web.console.templates=/etc/prometheus/consoles
      - --web.console.libraries=/etc/prometheus/console_libraries
      - --storage.tsdb.retention.time=1h
      - --config.file=/etc/prometheus/prometheus-config.yaml
      - --storage.tsdb.path=/prometheus
      - --web.enable-lifecycle
      - --web.route-prefix=/
      - --enable-feature=exemplar-storage
      - --enable-feature=otlp-write-receiver
    volumes:
      - ./telemetry/prometheus/prometheus-config.yaml:/etc/prometheus/prometheus-config.yaml
    deploy:
      resources:
        limits:
          memory: 300M
    restart: unless-stopped
    ports:
      - "${PROMETHEUS_SERVICE_PORT}:${PROMETHEUS_SERVICE_PORT}"
    networks:
      - ts-dkr-network

  # OpenSearch
  opensearch:
    image: ${OPENSEARCH_IMAGE}
    container_name: opensearch
    deploy:
      resources:
        limits:
          memory: 1G
    restart: unless-stopped
    networks:
      - ts-dkr-network
    environment:
      - cluster.name=ts-microservices-cluster
      - node.name=ts-microservices-node
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - OPENSEARCH_JAVA_OPTS=-Xms300m -Xmx300m
      - DISABLE_INSTALL_DEMO_CONFIG=true
      - DISABLE_SECURITY_PLUGIN=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    ports:
      - "9200"
